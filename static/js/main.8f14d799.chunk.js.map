{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/search-box/Search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","placeHolder","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,YAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACf,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,aCHdC,EAAU,SAACR,GACrB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLhBM,G,MAAW,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aACpC,OAAQ,uBACNZ,UAAU,SACVa,KAAK,SACLF,YAAY,kBACZG,SAAUF,MCuCCG,G,wDAzCb,aAAc,IAAD,8BACX,gBAQFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SARpC,EAAKC,MAAO,CACVb,SAAS,GACTU,YAAY,IAJH,E,gEAYO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAI5B,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAASU,EADT,EACSA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAgC,YAAY,iBACZpB,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f14d799.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.style.css';\r\n\r\nexport const Card = (props) => {\r\n    return <div className=\"card-container\">\r\n        <img alt=\"\" src={`https://robohash.org/${props.monster.id}?set=set2?size=100x100`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <h2>{props.monster.email}</h2>\r\n    </div>\r\n};","import React from 'react';\r\nimport './Card-list.style.css';\r\nimport {Card} from '../card/Card.component';\r\n\r\nexport const CardList =(props) =>{\r\n   return (\r\n   <div className='card-list'>\r\n      { props.monsters.map (monster =>(\r\n          <Card key={monster.id} monster={monster} />\r\n          ))}\r\n\r\n   </div>)\r\n}","import React from 'react';\r\nimport './Search-box.style.css'\r\n\r\nexport const Searchbox =({placeholder,handleChange})=>{\r\n  return  <input \r\n    className='search'\r\n    type=\"search\" \r\n    placeholder=\"Search Monsters\" \r\n    onChange={handleChange\r\n            //, () =>  console.log(this.state)\r\n        }/>\r\n}","import React,{Component} from 'react';\nimport {CardList} from './components/card-list/Card-list.component'\nimport { Searchbox } from './components/search-box/Search-box.components'\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state ={\n      monsters:[],\n      searchField:''\n    };\n    \n  }\n\n  handleChange =(e) => {\n    this.setState({searchField:e.target.value})\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user=>this.setState({monsters:user}))\n  }\n\n\n  render() {\n    const {monsters,searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <Searchbox \n        placeHolder='Search Monster'\n        handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters}/>\n                \n       \n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}